package GUI;

import java.awt.BorderLayout;
import javax.swing.JPanel;
import javax.swing.JLabel;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import comp_decomp.Compressor;
import comp_decomp.Decompressor;

import javax.swing.JFileChooser;
import java.io.*;

//Action listener to detect that the button was clicked and further actions needs to be taken


public class AppFrame extends JFrame implements ActionListener{

	//Creating 2 buttons
	JButton compressButton;
	JButton decompressButton;
	
	
	AppFrame(String name){
		
		this.setTitle(name);
		Container c= this.getContentPane();
		c.setLayout(new BorderLayout());
		
		//panel for heading
		JPanel headingPanel = new JPanel();
		headingPanel.setBackground(new Color(63,81,32));
		headingPanel.setPreferredSize(new Dimension(getWidth(),80));
		
		//label or name to heading
		JLabel headingLabel = new JLabel();
		headingLabel.setFont(new Font("Arial",Font.BOLD,24));
		headingLabel.setForeground(Color.white);
		headingPanel.add(headingLabel);
		
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		//this.setLayout(new FlowLayout());
		
//		compressButton=new JButton("Select file to compress");
//		compressButton.setSize(200, 300);
//		compressButton.addActionListener(this);
//		
//		decompressButton= new JButton("Select file to decompress");
//		decompressButton.setSize(200, 300);
//		decompressButton.addActionListener(this);
//		
//		
//		this.add(compressButton);
//		this.add(decompressButton);
//		this.setSize(800, 500);
//		this.setVisible(true);
//		this.getContentPane().setBackground(Color.black);
		 JPanel buttonPanel = new JPanel(); // Create a panel for the buttons
	        buttonPanel.setBackground(new Color(63, 81, 181)); // Set background color
	        buttonPanel.setPreferredSize(new Dimension(getWidth(), 120)); // Set preferred size

	        compressButton = new JButton("Select file to compress");
	        decompressButton = new JButton("Select file to decompress");
	        compressButton.setBackground(new Color(63, 81, 181)); // Set button background color
	        decompressButton.setBackground(new Color(63, 81, 181)); // Set button background color
	        compressButton.setForeground(Color.white); // Set button text color
	        decompressButton.setForeground(Color.white); // Set button text color

	        buttonPanel.add(compressButton);
	        buttonPanel.add(decompressButton);

	        c.add(headingPanel, BorderLayout.NORTH); // Add the heading panel to the top
	        c.add(buttonPanel, BorderLayout.CENTER); // Add the button panel to the center

	        compressButton.addActionListener(this);
	        decompressButton.addActionListener(this);

	        this.setSize(500, 300);
	        this.getContentPane().setBackground(Color.white); // Set background color for the frame
	        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        this.setLocationRelativeTo(null); // Center the frame on the screen
	        this.setVisible(true);
				
}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource()==compressButton) {
			JFileChooser filechooser=new JFileChooser();
			int response =filechooser.showSaveDialog(null);
			if(response == JFileChooser.APPROVE_OPTION) {
				File file =new File(filechooser.getSelectedFile().getAbsolutePath());
				System.out.print(file);
				try {
					Compressor.method(file);
				}catch(Exception e1) {
					JOptionPane.showMessageDialog(null,e1.toString());
				}
			}	
		}
		if(e.getSource()==decompressButton) {
			JFileChooser filechooser=new JFileChooser();
			int response =filechooser.showSaveDialog(null);
			if(response == JFileChooser.APPROVE_OPTION) {
				File file =new File(filechooser.getSelectedFile().getAbsolutePath());
				System.out.print(file);
				try {
					Decompressor.method(file);
				}catch(Exception e1) {
					JOptionPane.showMessageDialog(null,e1.toString());
				}
			}
		}
	}
		
	
}
